@model Agenda.Entities.Compromisso

@{
    var ajaxOptions = new AjaxOptions();
    ajaxOptions.HttpMethod = "POST";
    ajaxOptions.OnSuccess = "closeModal";
    ajaxOptions.UpdateTargetId = "compromisso-edit-modal";
}
<div class="modal-header">
    <button type="button" class="close"
            data-dismiss="modal">
        <span aria-hidden="true">&times;</span>
        <span class="sr-only">Fechar</span>
    </button>
    <h4 class="modal-title" id="myModalLabel">
        @Model.Titulo
    </h4>
</div>
<div class="modal-body">
    @using (Ajax.BeginForm("Edit", "Compromissos", ajaxOptions))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h3></h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.AgendaID)
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Assunto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Assunto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Assunto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Local, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Local, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Local, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraInicio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraFim, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraFim, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraFim, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="text-center">
                <a class="btn btn-outline btn-danger" data-dismiss="modal">Cancelar</a>
                <input type="submit" value="Salvar" class="btn btn-outline btn-success" />
            </div>
        </div>
    }
</div>

